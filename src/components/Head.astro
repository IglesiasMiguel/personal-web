---
// src/components/Head.astro
import { SITE_CONFIG, DEFAULT_PAGE_META, SEO_DEFAULTS } from '@/lib/constants';
import type { PageMeta } from '@/lib/constants';

const props = Astro.props as PageMeta;

const {
  title = DEFAULT_PAGE_META.title,
  description = DEFAULT_PAGE_META.description,
  ogType = DEFAULT_PAGE_META.ogType,
  ogImage = DEFAULT_PAGE_META.ogImage,
  noindex = false,
  nofollow = false,
} = props;

// URL Path generation
const canonicalURL = new URL(Astro.url.pathname, Astro.site || SITE_CONFIG.url);
const ogImageValue = ogImage ?? DEFAULT_PAGE_META.ogImage;
if (!ogImageValue) {
  throw new Error('ogImage is required');
}
const ogImageURL = new URL(ogImageValue, Astro.site || SITE_CONFIG.url);
const lang = (Astro.props.lang ?? 'en') as keyof typeof localeMap;
const localeMap = { en: 'en-US', es: 'es-ES' };
const ogLocale = localeMap[lang] ?? 'en-US';
---

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1.0,maximum-scale=5" />
  <title>{SITE_CONFIG.name}</title>

  <!-- SEO -->
  <meta name="description" content={description} />
  <meta
    name="robots"
    content={`${noindex ? 'noindex' : 'index'},${nofollow ? 'nofollow' : 'follow'}`}
  />
  <meta name="generator" content={Astro.generator} />
  <link rel="canonical" href={canonicalURL.href} />

  <!-- Security and Performance -->
  <meta http-equiv="X-Content-Type-Options" content="nosniff" />
  <meta name="referrer" content="strict-origin-when-cross-origin" />
  <meta http-equiv="content-language" content={lang} />

  <!-- Prevent automatic format detection -->
  <meta name="format-detection" content="telephone=no,address=no,email=no" />

  <!-- OGP (Facebook, other SNS) -->
  <meta property="og:type" content={ogType} />
  <meta property="og:site_name" content={SITE_CONFIG.name} />
  <meta property="og:title" content={title} />
  <meta property="og:description" content={description} />
  <meta property="og:url" content={canonicalURL.href} />
  <meta property="og:image" content={ogImageURL.href} />
  <meta property="og:locale" content={ogLocale} />

  <!-- Twitter Card -->
  <meta name="twitter:card" content={SEO_DEFAULTS.twitterCard} />
  <meta name="twitter:title" content={title} />
  <meta name="twitter:description" content={description} />
  <meta name="twitter:image" content={ogImageURL.href} />

  <!-- Icons -->
  <link rel="icon" href="/assets/common/images/favicon.ico" sizes="32x32" />
  <link rel="icon" href="/assets/common/images/favicon.png" type="image/png" sizes="192x192" />
  <link rel="icon" href="/assets/common/images/favicon.svg" type="image/svg+xml" />
  <link rel="mask-icon" href="/assets/common/images/favicon.svg" color="#000000" />
  <link rel="apple-touch-icon" href="/assets/common/images/apple-touch-icon.png" />

  <!-- Author and Copyright -->
  <meta name="author" content={SITE_CONFIG.author} />
  <meta name="copyright" content={`Â© ${new Date().getFullYear()} ${SITE_CONFIG.author}`} />

  {/* Slot: Additional head elements can be inserted here */}
  <slot />

  <!-- Dark mode detection script -->
  <script is:inline>
    // Detect system dark mode setting
    if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
      document.documentElement.classList.add('dark');
    }

    // Watch for changes in dark mode setting
    window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', (e) => {
      if (e.matches) {
        document.documentElement.classList.add('dark');
      } else {
        document.documentElement.classList.remove('dark');
      }
    });
  </script>
</head>
